div.container
  h1 Valeurs unitaires
  canvas#myChart_dist

javascript:
  var myRubyArray = "#{mes_x}";
  var tmpValue = myRubyArray.toString().replace(/&quot;/g, '');
  var tmpValue = tmpValue.replace(/[\[\]' /"/ \s]+/g, '');
  var myJSArray = tmpValue.split(",", #{mes_x.count});

  var ctx = document.getElementById("myChart_dist").getContext("2d");
  var myChart = new Chart(ctx, {
  type: 'bar',
  data: {
    labels: myJSArray, 
    datasets: [{
      label: 'Distance',
      data: #{mes_y},
        backgroundColor: 'rgba(151,187,205, .8)',
        borderColor: 'rgb(117,164,188)',
        borderWidth: 2,
        pointStrokeColor : '#fff',
      }]
    },
    options: {
      legend: {
        display: false
      },
      hover: {
        mode: 'single'
      },
      scales: {
        yAxes: [{
          ticks: {
            stepSize: 2,
            beginAtZero: true
          },
          scaleLabel: {
            display: true,
            labelString: "km parcourus",
            fontSize: 16
          }
        }],
        xAxes: [{
          barPercentage: .4,
          type: 'time',
          time: {
            unit: 'day',
            unitStepSize: 3,
            min: "#{mes_x.last}",
            max: "#{Date.strptime(mes_x.first, "%Y-%m-%d")+1}",
          },
          gridLines: {
            display: false,
            drawOnChartArea : false
          }
        }]
      }
    }
  });

div.container
  canvas#myChart_rythm

javascript:
  var myRubyArray = "#{mes_x}";
  var tmpValue = myRubyArray.toString().replace(/&quot;/g, '');
  var tmpValue = tmpValue.replace(/[\[\]' /"/ \s]+/g, '');
  var myJSArray = tmpValue.split(",", #{mes_x.count});
  
  var ctx = document.getElementById("myChart_rythm").getContext("2d");
  var myChart = new Chart(ctx, {
  type: 'bar',
  data: {
    labels: myJSArray, 
    datasets: [{
      label: 'Rythme',
      data: #{mes_y2},
        borderWidth: 2,
        pointStrokeColor : '#fff',
      }]
    },
    options: {
      showLines: false,
      legend: {
        display: false
      },
      hover: {
        mode: 'single'
      },
      scales: {
        yAxes: [{
          display: false,
          ticks: {
            reverse: true
          }
        }],
        xAxes: [{
          barPercentage: .4,
          type: 'time',
          time: {
            unit: 'day',
            unitStepSize: 3,
            min: "#{mes_x.last}",
            max: "#{Date.strptime(mes_x.first, "%Y-%m-%d")+1}",
          }
        }]
      },
      tooltips: {
        callbacks: { 
          label: function(tooltipItem, data) {
            var datasetLabel = data.datasets[tooltipItem.datasetIndex].label || 'Other';
            var min = Math.floor((Number(tooltipItem.yLabel) * 60) % 60);
            var sec = Math.floor((Number(tooltipItem.yLabel) * 3600) % 3600) - min * 60 ;
            return datasetLabel + ': ' + min + ":" + (sec < 10 ? "0" : "") + sec;
          }
        }
      }
    }
  });

